
SHOW FUNCTIONS;
SHOW FUNCTIONS LIKE '%date';
SHOW FUNCTIONS LIKE '%date%';
SHOW FUNCTIONS LIKE '%zz';

SELECT planetId, LEAST(LIST(magnitude)) FROM $satellites group by planetId;

SELECT TIMESTAMP('2022-01-01');
SELECT NUMERIC('22');
SELECT BOOLEAN('true');
SELECT TIMESTAMP '2022-01-01';
SELECT NUMERIC '22';
SELECT BOOLEAN 'true';
SELECT CAST('2022-01-01' AS TIMESTAMP);
SELECT CAST('22' AS NUMERIC);
SELECT CAST('true' AS BOOLEAN);

SELECT CEIL(1.5);
SELECT FLOOR(2.5);

SHOW DATABASES;

SELECT POSITION('e' IN 'barge');
SELECT POSITION('x' IN 'barge');
SELECT POSITION('a' IN name) FROM $planets;
SELECT POSITION(' ' IN name) FROM $astronauts;
SELECT LEFT('', 1);
SELECT LEFT('a', 1);
SELECT LEFT('ab', 1);

SELECT CASE id WHEN 3 THEN 'Earth' WHEN 1 THEN 'Mercury' ELSE 'Elsewhere' END FROM $planets;
SELECT CASE id WHEN 3 THEN 'Earth' WHEN 1 THEN 'Mercury' END FROM $planets;
SELECT CASE WHEN id = 3 THEN 'Earth' WHEN id = 1 THEN 'Mercury' ELSE 'Elsewhere' END FROM $planets;
SELECT CASE WHEN id = 3 THEN 'Earth' WHEN id = 1 THEN 'Mercury' END FROM $planets;

SELECT * FROM $astronauts WHERE death_date > current_time - interval '50' YEAR;
SELECT * FROM $astronauts WHERE birth_date < current_time + interval '50' YEAR;

SELECT LTRIM('   ABC');
SELECT TRIM(LEADING '_' FROM '___ABC');
SELECT TRIM('_' FROM '__init__');
SELECT TRIM(BOTH '_' FROM '____dunder_');
SELECT TRIM(TRAILING '__' FROM '_dunder_');
SELECT RTRIM('   dunder    ');
SELECT TRIM('    ABC   ');
SELECT TRIM(name) FROM $planets;
SELECT TRIM(LEADING ' ' FROM name) FROM $planets;

SELECT HASH(name || str(id)) FROM $planets GROUP BY name, id;
SELECT * FROM (SELECT HASH(name || str(id)) AS PID, name, id FROM $planets) AS pset INNER JOIN (SELECT HASH(name || str(id)) as PID, name, id FROM $planets GROUP BY name, id) ON PID = PID ORDER BY pset.name, pset.id;

ANALYZE TABLE $planets;
ANALYZE TABLE $astronauts;

SELECT LEVENSHTEIN(name, 'zeus') FROM $planets;
SELECT FROM_UNIXTIME(0);
SELECT UNIXTIME();
SELECT UNIXTIME(death_date), death_date from $astronauts;

SELECT name FROM $planets ORDER BY mass, gravity;
SELECT name FROM $planets ORDER BY mass DESC;
SELECT name FROM $planets ORDER BY mass DESC, gravity ASC;
SELECT * FROM $planets ORDER BY mass;
SELECT name FROM $planets ORDER BY mass LIMIT 2;

WITH nom AS (SELECT planetId FROM $satellites GROUP BY planetId) SELECT planetId FROM nom;
WITH nom AS (SELECT planetId as id FROM $satellites GROUP BY planetId) SELECT * FROM $planets INNER JOIN nom ON id = id;
WITH nom AS (SELECT id FROM $planets FOR '1688-01-01') SELECT * FROM $planets INNER JOIN nom ON id = id;
WITH nom AS (SELECT id FROM $planets FOR '1688-01-01') SELECT * FROM $planets FOR TODAY INNER JOIN nom ON id = id;
WITH nom AS (SELECT id FROM $planets FOR DATES BETWEEN '2022-01-01' AND TODAY) SELECT * FROM $planets INNER JOIN nom ON id = id;

ANALYZE TABLE $astronauts;
ANALYZE TABLE $planets;
ANALYZE TABLE 'testdata/flat/formats/parquet/tweets.parquet';

USE opteryx;

SELECT SPLIT('a,bc,def');
SELECT SPLIT('a,bc,def', ',');
SELECT SPLIT('a');
SELECT SPLIT('a', 'a');
SELECT SPLIT(name, ' ') FROM $astronauts;